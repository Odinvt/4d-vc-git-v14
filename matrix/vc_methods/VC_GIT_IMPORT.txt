//%attributes = {"lang":"en","shared":true,"executedOnServer":true} comment added and reserved by 4D.

// --[HEADERSTART]-------------------------------------
// User name (OS): Lutz Epperlein
// Date and time: 24.05.2013, 17:56:33
// ----------------------------------------------------
// Description:
//   Import outside created or changed methods 
//   existing on file system.
//
//   Note: executes on server.
//
//   Called by Macro.
// --[HEADEREND]---------------------------------------
C_LONGINT($error_l)

C_BOOLEAN(<>VC_Enabled_f)

UTIL_ERR_Startup


If (<>VC_Enabled_f)

C_LONGINT($progID_l;$progThreshold_l)
$progThreshold_l:=1000
$progID_l:=PROG_Create("Import";4;$progThreshold_l)


PROG_Update($progID_l;0)

PROG_Update($progID_l;1/4)

// getting list of files from VC_GIT_DIFF
C_TEXT($output)

$output:=VC_GIT_DIFF 


If (VC_GIT_OK=0)
ALERT("Error Edited Methods could not be retrived")
Else 
// ok continue

// Converting string of list of files to array of files

C_TEXT($rest_of_output;$filename)
C_LONGINT($CR_position;$start_from;$length_CR)
C_INTEGER($counter)
$start_from:=1
$rest_of_output:=$output
$counter:=1

ARRAY TEXT($doclist;0)

Repeat 
// position of next CR (testing Char(Carriage return))
$CR_position:=Position("\n";$rest_of_output;$start_from;$length_CR)

If ($CR_position=0)
// add only .txt files
If ($rest_of_output="@.txt")
// CR not found
// extend size of array
ARRAY TEXT($doclist;$counter)
//take the whole string
$doclist{$counter}:=$rest_of_output

$counter:=$counter+1
End if 
Else 
// take file name
$filename:=Substring($rest_of_output;1;$CR_position-1)
// continue with the rest of the list
$rest_of_output:=Substring($rest_of_output;$CR_position+$length_CR;Length($rest_of_output)-$CR_position-$length_CR)
// add only .txt files
If ($filename="@.txt")

// CR found
// extend files array
ARRAY TEXT($doclist;$counter)
// take the string from the start till the CR char
$doclist{$counter}:=$filename



$counter:=$counter+1
End if 
End if 

Until ($CR_position=0)


// debug returned files by GIT DIFF
C_TEXT($listOfMethods)
$listOfMethods:=""
For ($methos_index;1;Size of array($doclist))
$listOfMethods:=$doclist{$methos_index}+"\n"+$listOfMethods
End for 

ALERT("GIT DIFF FOUND "+String(Size of array($doclist))+" Methods changed, sending them to importation : \n"+$listOfMethods);


// ====== Debugging code ======
C_TEXT($listOfMethods)
C_LONGINT($methos_index)
$listOfMethods:=""
For ($methos_index;1;Size of array($doclist))
$listOfMethods:=$doclist{$methos_index}+"\n"+$listOfMethods
End for 

ALERT("Importing "+String(Size of array($doclist))+" Methods\n"+\
$listOfMethods)
// ====== End Debugging code ======

PROG_Update($progID_l;3/4)
// error nothing to import. Not really an error
//$error_l:=Choose(Size of array($doclist)>0;0;50)

// And now import the code
C_LONGINT($progIDFiles_l)
$progIDFiles_l:=PROG_Create("Files";Size of array($doclist);$progThreshold_l)

For ($index;1;Size of array($doclist))

// load the code from disk
C_TIME($docRef_h)
UTIL_ERR_HandlerInstall
C_TEXT($curr_file_path)
$curr_file_path:=Convert path system to POSIX($doclist{$index};*)
$curr_file_path:=Convert path POSIX to system($curr_file_path;*)
$docRef_h:=Open document($curr_file_path;Read mode)
$error_l:=UTIL_ERR_HandlerRemove

PROG_Update($progIDFiles_l;$index/Size of array($doclist);$index)


If ($error_l=0)

C_BLOB($methodBody_b;$tempBody_b)
SET BLOB SIZE($methodBody_b;0)
SET BLOB SIZE($tempBody_b;0)
RECEIVE PACKET($docRef_h;$methodBody_b;Get document size($curr_file_path))
CLOSE DOCUMENT($docRef_h)

// remove the BOM
C_INTEGER($begin_offset)
$begin_offset:=0
COPY BLOB($methodBody_b;$tempBody_b;$begin_offset;0;BLOB size($methodBody_b)-$begin_offset)

// convert to text
$methodBody:=Convert to text($tempBody_b;"UTF-8")
// error empty method code
$error_l:=Choose(Length($methodBody)=0;51;0)
If ($error_l=0)
// fix line endings
C_TEXT($methodBody)
$methodBody:=Replace string($methodBody;Char(Line feed);Char(Carriage return))

// system path to method path
C_TEXT($filePathPosix;$DOAPath_t)
$filePathPosix:=Convert path system to POSIX($doclist{$index})
$DOAPath_t:=Replace string($filePathPosix;<>VCM_ROOT_POSIX_T+"/";"")
$DOAPath_t:=Replace string($DOAPath_t;".txt";"")

// load the code
UTIL_ERR_HandlerInstall
METHOD SET CODE($DOAPath_t;$methodBody;*)
$error_l:=UTIL_ERR_HandlerRemove

End if 

End if 

If ($error_l#0)
$index:=Size of array($doclist)+1// break of for-loop
End if 

End for 

PROG_Update($progID_l;1)

ALERT("All Methods Imported")
VC_GIT_WRITE_LAST_COMMIT_SHA
If (VC_GIT_OK=0)
ALERT("Could Not Write New Last Commit to local file")
Else 
ALERT("New Last Commit writen")
End if 

End if 

Else 
// This should be impossible, because you have to open
// a method in order to run the the macro that calls
// this method...opening a method launches the component.
$error_l:=<>ERR_VC_NotEnabled_l
End if 


If ($error_l#0)
UTIL_ERR_HandleError($error_l;<>VC_ComponentName_t;UTIL_ERR_ErrorMethod_t;"Error while importing")
End if 


PROG_CloseAll
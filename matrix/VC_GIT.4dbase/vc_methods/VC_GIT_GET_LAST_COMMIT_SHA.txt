//%attributes = {"lang":"en","shared":true,"executedOnServer":true} comment added and reserved by 4D.
// VC_GIT_OK : if command executed successful
C_LONGINT(VC_GIT_OK)
VC_GIT_OK:=0

C_TIME($docRef_h)
C_TEXT($filename)
$filename:="last_imported_commit_sha.git"

If (Test path name($filename)=Is a document)

ALERT("file 'last_imported_commit_sha.git' found. opening")

UTIL_ERR_HandlerInstall
$docRef_h:=Open document($filename;Read mode)
$error_l:=UTIL_ERR_HandlerRemove


If ($error_l=0)


C_TEXT($fileBody)
RECEIVE PACKET($docRef_h;$fileBody;Get document size($filename))
CLOSE DOCUMENT($docRef_h)

// error empty file code
$error_l:=Choose(Length($fileBody)=0;51;0)
If ($error_l=0)
// fix line endings

C_TEXT($methodBody;$last_imported_commit_sha)

// the last commit SHA string would be the first string before the first Carriage Return
// get position of first Carriage Return
C_LONGINT($CR_position;$length_CR)
$CR_position:=Position("\n";$fileBody;1;$length_CR)
If ($CR_position=0)
// we know the file is not empty so if carriage return not found 
// take the whole string as last imported commit
$last_imported_commit_sha:=$fileBody
$last_imported_commit_sha:=Replace string($last_imported_commit_sha;Char(Line feed);"")
$last_imported_commit_sha:=Replace string($last_imported_commit_sha;Char(Carriage return);"")
Else 
// multiple lines found. taking the first
$last_imported_commit_sha:=Substring($fileBody;1;$CR_position-1)
$last_imported_commit_sha:=Replace string($last_imported_commit_sha;Char(Line feed);"")
$last_imported_commit_sha:=Replace string($last_imported_commit_sha;Char(Carriage return);"")
End if 

ALERT("LAST IMPORTED COMMIT FOUND IN FILE : "+$last_imported_commit_sha)
$0:=$last_imported_commit_sha
VC_GIT_OK:=1
Else 
// empty file
$0:=""
End if 

Else 
// file does not exist
ALERT("Error while opening the file. Returning empty last commit hashcode")
$0:=""
End if 

Else 
// file does not exist
ALERT("File not found returning empty last commit hashcode")
$0:=""
End if 